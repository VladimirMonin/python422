from abc import ABC, abstractmethod

# –ë–∞–∑–æ–≤—ã–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
class CatState(ABC):
    @abstractmethod
    def meow(self, cat: "Cat"):
        pass

# –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ì–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ç
class HungryCatState(CatState):
    def meow(self, cat: "Cat"):
        print(f"üòæ –ì–æ–ª–æ–¥–Ω—ã–π –∫–æ—Ç (id={id(cat)}) –≥—Ä–æ–º–∫–æ –º—è—É–∫–∞–µ—Ç –ú–Ø–Ø–Ø–Ø–£!")
        # –ü–æ–∫–æ—Ä–º–∏–ª–∏ –∫–æ—Ç–∞ - –æ–Ω —Å—Ç–∞–ª —Å—á–∞—Å—Ç–ª–∏–≤—ã–º
        cat.set_state(HappyCatState())

# –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –°—á–∞—Å—Ç–ª–∏–≤—ã–π –∫–æ—Ç
class HappyCatState(CatState):
    def meow(self, cat: "Cat"):
        print(f"üò∫ –°—á–∞—Å—Ç–ª–∏–≤—ã–π –∫–æ—Ç (id={id(cat)}) –º—É—Ä–ª—ã—á–µ—Ç –º—É—Ä-–º—É—Ä")

# –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å - –ö–æ—Ç
class Cat:
    def __init__(self):
        # –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ—Ç –≥–æ–ª–æ–¥–Ω—ã–π
        self._state = HungryCatState()
        print(f"üê± –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–æ—Ç (id={id(self)})")
    
    def set_state(self, state: CatState):
        # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
        print(f"üîÑ –ö–æ—Ç (id={id(self)}) –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ {state.__class__.__name__}")
        self._state = state
    
    def meow(self):
        # –ü—Ä–∏ –≤—ã–∑–æ–≤–µ meow() —É –∫–æ—Ç–∞, –æ–Ω –¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ 
        # —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è
        print(f"‚û°Ô∏è –ö–æ—Ç (id={id(self)}) –¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç meow() –≤ {self._state.__class__.__name__}")
        self._state.meow(self)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –∫–æ—Ç–∞
    cat = Cat()
    
    # –ö–æ—Ç –º—è—É–∫–∞–µ—Ç –∫–æ–≥–¥–∞ –≥–æ–ª–æ–¥–Ω—ã–π
    cat.meow()
    
    # –ö–æ—Ç –º—è—É–∫–∞–µ—Ç –∫–æ–≥–¥–∞ —Å—á–∞—Å—Ç–ª–∏–≤—ã–π
    cat.meow()
